from django.core.management.base import BaseCommand
from task import models
from task.models import Task_Backend, Task_Frontend
from config import settings
from telebot import TeleBot, types
import requests


bot = TeleBot('6435207550:AAEZglHbN6cVmhuYi1hyoOBsHGf1mvN2Re8', threaded=False)


class Command(BaseCommand):
    help = 'Implemented to Django application telegram wwe.py setup command'

    def handle(self, *args, **kwargs):
        bot.enable_save_next_step_handlers(delay=2)
        bot.load_next_step_handlers()
        bot.infinity_polling()


@bot.message_handler(commands=['start'])
def start_message(message):

    keyboard = types.ReplyKeyboardMarkup()
    button1 = types.KeyboardButton('BackEnd')
    button2 = types.KeyboardButton('Frontend')
    keyboard.add(button1, button2)

    message2 = bot.send_message(
        message.chat.id,
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Python –ó–∞–¥–∞—á–∫–∏ –±–æ—Ç–∞! üêç\n–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python.\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ "–ó–∞–¥–∞—á—É" –∏–ª–∏ "–ü–æ–º–æ—â—å", –∏ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è. –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å? üöÄ',
        reply_markup=keyboard
    )



@bot.message_handler(func=lambda x: x.text in ['BackEnd'])
def task_backend(message):
    keyboard = types.ReplyKeyboardMarkup()
    button3 = types.KeyboardButton('–¢–∞—Å–∫–∏ Backend')
    button4 = types.KeyboardButton('–•–≤–∞—Ç–∏—Ç')
    keyboard.add(button3, button4)

    message3 = bot.send_message(message.chat.id, '–ù–∞—á–∏–Ω–∞–µ–º BackEnd –∑–∞–¥–∞—á–∏', reply_markup=keyboard)


current_task_Backend_id = 1

@bot.message_handler(func=lambda x: x.text in ['–¢–∞—Å–∫–∏ Backend'])
def task_backend_next(message, *args, **kwargs):
    global current_task_Backend_id
    try:
        current_task = Task_Backend.objects.get(id=current_task_Backend_id)
    except Task_Backend.DoesNotExist:
        bot.send_message(message.chat.id, "BackEnd –∑–∞–¥–∞—á–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å")
        return

    current_task_Backend_id += 1

    with open(current_task.image.path, 'rb') as image_file:
        bot.send_photo(message.chat.id, image_file)


@bot.message_handler(func=lambda x: x.text in ['Frontend'])
def task_frontend(message):
    keyboard = types.ReplyKeyboardMarkup()
    button5 = types.KeyboardButton('–¢–∞—Å–∫–∏ Frontend')
    button6 = types.KeyboardButton('–•–≤–∞—Ç–∏—Ç')
    keyboard.add(button5, button6)

    message3 = bot.send_message(message.chat.id, '–ù–∞—á–∏–Ω–∞–µ–º Frontend –∑–∞–¥–∞—á–∏', reply_markup=keyboard)


current_tasks_Frontend_id = 1

@bot.message_handler(func=lambda x: x.text in ['–¢–∞—Å–∫–∏ Frontend'])
def task_frontend_next(message, *args, **kwargs):
    global current_tasks_Frontend_id
    try:
        current_tasks = Task_Frontend.objects.get(id=current_tasks_Frontend_id)
    except Task_Frontend.DoesNotExist:
        bot.send_message(message.chat.id, "Frontend –∑–∞–¥–∞—á–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å")
        return

    current_tasks_Frontend_id += 1

    with open(current_tasks.image.path, 'rb') as image_file:
        bot.send_photo(message.chat.id, image_file)


bot.polling()
