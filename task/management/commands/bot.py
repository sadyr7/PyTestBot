from django.core.management.base import BaseCommand
from task.models import Task_Backend, Task_Frontend
from telebot import TeleBot, types

bot = TeleBot('6435207550:AAEZglHbN6cVmhuYi1hyoOBsHGf1mvN2Re8', threaded=False)

class Command(BaseCommand):

    def handle(self, *args, **kwargs):
        bot.enable_save_next_step_handlers(delay=2)
        bot.load_next_step_handlers()
        bot.infinity_polling()


@bot.message_handler(commands=['start'])
def start_message(message):

    keyboard = types.ReplyKeyboardMarkup()
    button1 = types.KeyboardButton('BackEnd')
    button2 = types.KeyboardButton('Frontend')
    keyboard.add(button1, button2)

    message2 = bot.send_message(
        message.chat.id,
        '–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ PyTestBot!üöÄ\n\n–ú–æ—è –∑–∞–¥–∞—á–∞ - —Å–¥–µ–ª–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ –ª–µ–≥–∫–∏–º –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–º.üî∞\n –Ø –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å –∑–∞–¥–∞—á–∞–º–∏,\n —á—Ç–æ–±—ã —Ç—ã –≤—Å–µ–≥–¥–∞ –±—ã–ª –≤ –∫—É—Ä—Å–µ —Ç–µ–∫—É—â–∏—Ö –∑–∞–¥–∞—á –ø–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –∏ –±—ç–∫–µ–Ω–¥—É.–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å–æ–≤–º–µ—Å—Ç–Ω—É—é —Ä–∞–±–æ—Ç—É!',
        reply_markup=keyboard
    )


@bot.message_handler(func=lambda x: x.text in ['BackEnd'])
def task_backend(message):
    keyboard = types.ReplyKeyboardMarkup()
    button3 = types.KeyboardButton('–¢–∞—Å–∫–∏ Backend')
    button4 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    keyboard.add(button3, button4)

    message3 = bot.send_message(message.chat.id, '–ù–∞—á–∏–Ω–∞–µ–º BackEnd –∑–∞–¥–∞—á–∏', reply_markup=keyboard)

current_task_Backend_id = 1

@bot.message_handler(func=lambda x: x.text in ['–¢–∞—Å–∫–∏ Backend'])
def task_backend_next(message, *args, **kwargs):
    global current_task_Backend_id
    try:
        current_task = Task_Backend.objects.get(id=current_task_Backend_id)
    except Task_Backend.DoesNotExist:
        bot.send_message(message.chat.id, "BackEnd –∑–∞–¥–∞—á–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å")
        return

    current_task_Backend_id += 1

    with open(current_task.image.path, 'rb') as image_file:
        bot.send_photo(message.chat.id, image_file)

@bot.message_handler(func=lambda x: x.text in ['Frontend'])
def task_frontend(message):
    keyboard = types.ReplyKeyboardMarkup()
    button5 = types.KeyboardButton('–¢–∞—Å–∫–∏ Frontend')
    button6 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    keyboard.add(button5, button6)

    message3 = bot.send_message(message.chat.id, '–ù–∞—á–∏–Ω–∞–µ–º Frontend –∑–∞–¥–∞—á–∏', reply_markup=keyboard)

current_tasks_Frontend_id = 1

@bot.message_handler(func=lambda x: x.text in ['–¢–∞—Å–∫–∏ Frontend'])
def task_frontend_next(message, *args, **kwargs):
    global current_tasks_Frontend_id
    try:
        current_tasks = Task_Frontend.objects.get(id=current_tasks_Frontend_id)
    except Task_Frontend.DoesNotExist:
        bot.send_message(message.chat.id, "Frontend –∑–∞–¥–∞—á–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å")
        return

    current_tasks_Frontend_id += 1

    with open(current_tasks.image.path, 'rb') as image_file:
        bot.send_photo(message.chat.id, image_file)


@bot.message_handler(func=lambda x: x.text == '–ù–∞–∑–∞–¥')
def go_back(message):
    keyboard = types.ReplyKeyboardMarkup()
    button1 = types.KeyboardButton('BackEnd')
    button2 = types.KeyboardButton('Frontend')
    keyboard.add(button1, button2)

    bot.send_message(
        message.chat.id,
        '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.',
        reply_markup=keyboard
    )


bot.polling()